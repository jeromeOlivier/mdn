extends layout

//- mixin for form group creation
mixin formGroup(labelText, id, inputType, placeholder, name, value, required)
    div.form-group
        label.mt-3(for=id) #{labelText}:
        input.form-control(id=id, type=inputType, placeholder=placeholder, name=name, required=required, value=value)

block content
    h1= title

    form(method='POST' action='')
        // title text input
        +formGroup('Title', 'title', 'text', 'Name of book', 'title', book ? book.title : '', true)
        div.form-group
            // author pulldown
            label.mt-3(for='author') Author:
            select#author.form-control(type='select', placeholder='Select author' name='author' required='true')
                - const sortedAuthors = authors.sort((a, b) => a.family_name.toUpperCase().localeCompare(b.family_name.toUpperCase()));
                for author in sortedAuthors
                    if book
                        option(value=author._id selected=(author._id.toString() === book.author._id.toString())) #{author.name}
                    else
                        option(value=author._id) #{author.name}
            // summary textarea
            label.mt-3(for='summary') Summary:
            textarea.form-control(id='summary', name='summary', rows='5') #{book ? book.summary : ''}
            // isbn text input
        +formGroup('ISBN:', 'isbn', 'text', 'ISBN13', 'isbn', book ? book.isbn : '', true)
        // genre checkboxes
        label.mt-3 Genre:
        div
            for genre in genres
                div(style='display: inline; padding-right: 1rem;')
                    input.checkbox-input(type='checkbox', name='genre', id=genre._id, value=genre._id, checked=genre.checked )
                    label.p-1(for=genre._id) #{genre.name}
        button.btn.btn-primary(type='submit') Submit

        if errors
            ul
                each error in errors
                    li!= error.msg

    // Path: views/book_form.pug